/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package srcs;

import ORM.ItemPrices;
import Reports.ViewItemPrice;
import static Reports.ViewItemPrice.a;
import exClass.NotificationPopup;
import exClass.PoolManager;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JTextField;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;
import static srcs.EditPrice.IDItem;

/**
 *
 * @author oditha
 */
public class EditPrice extends javax.swing.JFrame {

    public static int IDItem;

    boolean FLAG_TXT_VALIDATE = false;

    public EditPrice() {
        initComponents();
        laodDetails();
        txtGrossPrice.grabFocus();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGrossPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNettPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMinPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        comboSup = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        comboSeller = new javax.swing.JComboBox<String>();
        txtSupWarrenty = new javax.swing.JTextField();
        txtSelelrWarrenty = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Price | JRTraders");
        setAlwaysOnTop(true);

        jLabel3.setText("Item Code");

        txtItemCode.setEditable(false);
        txtItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeActionPerformed(evt);
            }
        });

        jLabel4.setText("Cost");

        txtGrossPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGrossPriceFocusLost(evt);
            }
        });
        txtGrossPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGrossPriceKeyTyped(evt);
            }
        });

        jLabel5.setText("Nett Price");

        txtNettPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNettPriceFocusLost(evt);
            }
        });
        txtNettPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNettPriceKeyTyped(evt);
            }
        });

        jLabel6.setText("Min Price");

        txtMinPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinPriceFocusLost(evt);
            }
        });
        txtMinPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinPriceKeyTyped(evt);
            }
        });

        jLabel1.setText("Supplier Warranty");

        comboSup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Warranty", "Months", "Years" }));
        comboSup.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboSupPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSupActionPerformed(evt);
            }
        });

        jLabel2.setText("Seller Warranty");

        comboSeller.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Warranty", "Months", "Years" }));
        comboSeller.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboSellerPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        txtSupWarrenty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSupWarrentyFocusLost(evt);
            }
        });
        txtSupWarrenty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupWarrentyActionPerformed(evt);
            }
        });

        txtSelelrWarrenty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSelelrWarrentyFocusLost(evt);
            }
        });

        btnSave.setText("Update");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(165, 165, 165)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNettPrice)
                        .addGap(30, 30, 30)
                        .addComponent(txtMinPrice))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                .addGap(160, 160, 160)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                .addGap(126, 126, 126))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtItemCode)
                                .addGap(28, 28, 28)
                                .addComponent(txtGrossPrice))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(307, 307, 307))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(321, 321, 321))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSelelrWarrenty)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboSeller, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSupWarrenty)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboSup, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(166, 166, 166)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtItemCode))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtGrossPrice)
                        .addGap(4, 4, 4)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNettPrice)
                    .addComponent(txtMinPrice))
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSupWarrenty)
                    .addComponent(comboSup))
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSelelrWarrenty)
                    .addComponent(comboSeller))
                .addGap(45, 45, 45)
                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemCodeActionPerformed

    private void txtSupWarrentyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupWarrentyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupWarrentyActionPerformed

    private void comboSupPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboSupPopupMenuWillBecomeInvisible

//        if (comboSup.getSelectedIndex() == 0) {
//
//            txtSupWarrenty.setText("No Warranty");
//
//        } else {
//
//            txtSupWarrenty.setText(null);
//
//        }

    }//GEN-LAST:event_comboSupPopupMenuWillBecomeInvisible

    private void comboSellerPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboSellerPopupMenuWillBecomeInvisible

//        if (comboSeller.getSelectedIndex() == 0) {
//
//            txtSelelrWarrenty.setText("No Warranty");
//
//        } else {
//
//            txtSelelrWarrenty.setText(null);
//
//        }

    }//GEN-LAST:event_comboSellerPopupMenuWillBecomeInvisible

    private void txtGrossPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGrossPriceFocusLost
//        txtNettPrice.grabFocus();
    }//GEN-LAST:event_txtGrossPriceFocusLost

    private void txtNettPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNettPriceFocusLost
//        txtMinPrice.grabFocus();
    }//GEN-LAST:event_txtNettPriceFocusLost

    private void txtMinPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinPriceFocusLost
//        txtSupWarrenty.grabFocus();
    }//GEN-LAST:event_txtMinPriceFocusLost

    private void txtSupWarrentyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupWarrentyFocusLost
//        txtSelelrWarrenty.grabFocus();
    }//GEN-LAST:event_txtSupWarrentyFocusLost

    private void txtSelelrWarrentyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSelelrWarrentyFocusLost

//        btnSave.grabFocus();

    }//GEN-LAST:event_txtSelelrWarrentyFocusLost

    private void txtGrossPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGrossPriceKeyTyped
        char c = evt.getKeyChar();

        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {

            evt.consume();

        }
    }//GEN-LAST:event_txtGrossPriceKeyTyped

    private void txtNettPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNettPriceKeyTyped
        char c = evt.getKeyChar();

        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {

            evt.consume();

        }
    }//GEN-LAST:event_txtNettPriceKeyTyped

    private void txtMinPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinPriceKeyTyped
        char c = evt.getKeyChar();

        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {

            evt.consume();

        }
    }//GEN-LAST:event_txtMinPriceKeyTyped

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try {
            //validateTXT();
            if (txtNettPrice.getText().equals("")) {
                NotificationPopup.fillFeilds();
            } else if (txtGrossPrice.getText().equals("")) {
                NotificationPopup.fillFeilds();
            } else if (txtMinPrice.getText().equals("")) {
                NotificationPopup.fillFeilds();
            } else {

                //int x=
                Session openSession = PoolManager.getSessionFactory().openSession();
                Transaction beginTransaction = openSession.beginTransaction();
                Criteria createCriteria = openSession.createCriteria(ItemPrices.class);
                createCriteria.createAlias("item", "i");
                createCriteria.add(Restrictions.eq("i.idItem", IDItem));
                ItemPrices itemPrices = (ItemPrices) createCriteria.uniqueResult();

                itemPrices.setNettPrice(Double.parseDouble(txtNettPrice.getText()));
                itemPrices.setGrossPrice(Double.parseDouble(txtGrossPrice.getText()));
                itemPrices.setMinPrice(Double.parseDouble(txtMinPrice.getText()));
                itemPrices.setSupWarrenty(txtSupWarrenty.getText());
                itemPrices.setSelelrWarrenty(txtSelelrWarrenty.getText());

                openSession.update(itemPrices);
                beginTransaction.commit();
                openSession.close();

                NotificationPopup.save();
                ClearTXT();

                ViewItemPrice.loadPrice();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void comboSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditPrice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboSeller;
    private javax.swing.JComboBox<String> comboSup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtGrossPrice;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtMinPrice;
    private javax.swing.JTextField txtNettPrice;
    private javax.swing.JTextField txtSelelrWarrenty;
    private javax.swing.JTextField txtSupWarrenty;
    // End of variables declaration//GEN-END:variables

    private void laodDetails() {

        try {

            Session openSession = PoolManager.getSessionFactory().openSession();
            Criteria createCriteria = openSession.createCriteria(ItemPrices.class);
            createCriteria.createAlias("item", "i");
            createCriteria.add(Restrictions.eq("i.idItem", a));
            //Item item=(Item) createCriteria.uniqueResult();
            List<ItemPrices> list = createCriteria.list();

            for (ItemPrices ip : list) {
                txtItemCode.setText(ip.getItem().getItemCode());
                txtNettPrice.setText("" + ip.getNettPrice()+"0");
                txtGrossPrice.setText("" + ip.getGrossPrice()+"0");
                txtMinPrice.setText("" + ip.getMinPrice()+"0");
                txtSupWarrenty.setText(ip.getSupWarrenty());
                txtSelelrWarrenty.setText(ip.getSelelrWarrenty());

                IDItem = ip.getItem().getIdItem();

                //System.out.println(IDItem);
            }

            openSession.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void validateTXT() {

        Component[] cp = jPanel1.getComponents();
        for (Component c : cp) {

            if (c instanceof JTextField) {

                if ((((JTextField) c).getText().isEmpty())) {

                    FLAG_TXT_VALIDATE = true;

                    break;

                } else {

                    FLAG_TXT_VALIDATE = false;

                }

            }

        }
    }

    private void ClearTXT() {

        Component[] cp = jPanel1.getComponents();
        for (Component c : cp) {

            if (c instanceof JTextField) {

                ((JTextField) c).setText(null);

            }

        }

    }

}
